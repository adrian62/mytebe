version: "3"

services:
  tesberry-bridge-vehicle:
    image: tesberry-bridge
    build: ./packages/bridge
    restart: always
    network_mode: host
    volumes:
      - ./packages/bridge/db/Model3CAN.dbc:/db/Model3CAN.dbc
      - ./packages/bridge/index.py:/index.py
    cap_add:
      - NET_ADMIN
    environment:
      - CHANNEL=can0

  tesberry-bridge-chassis:
    image: tesberry-bridge
    build: ./packages/bridge
    restart: always
    network_mode: host
    volumes:
      - ./packages/bridge/db/Model3CAN.dbc:/db/Model3CAN.dbc
      - ./packages/bridge/index.py:/index.py
    cap_add:
      - NET_ADMIN
    environment:
      - CHANNEL=can1

  tesberry-ui:
    build: ./packages/ui
    restart: "no"
    network_mode: host
    environment:
      - PORT=80

  mosquitto:
    image: eclipse-mosquitto
    restart: always
    volumes:
      - ./config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    ports:
      - 1883:1883
      - 9001:9001

  savvycan-mqtt-vehicle:
    image: savvycan-mqtt
    build: ./packages/savvycan-mqtt
    restart: "no"
    network_mode: host
    cap_add:
      - NET_ADMIN
    environment:
      - CHANNEL=can0
      - MQTT_HOST=localhost
      - MQTT_PORT=1883

  savvycan-mqtt-chassis:
    image: savvycan-mqtt
    build: ./packages/savvycan-mqtt
    restart: "no"
    network_mode: host
    cap_add:
      - NET_ADMIN
    environment:
      - CHANNEL=can1
      - MQTT_HOST=localhost
      - MQTT_PORT=1883

  carplay:
    build: ./packages/carplay
    restart: "no"
    ports:
      - 3001:3001
    network_mode: host
    privileged: true
    cap_add:
      - NET_ADMIN
    volumes:
      - /dev:/dev

  nodered:
    image: nodered/node-red:latest
    restart: always
    network_mode: host
    volumes:
      - ./config/nodered:/data
    ports:
      - 1880:1880
    user: "1000"

  portainer:
    image: portainer/portainer-ce
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/portainer/:/data
    ports:
      - 9000:9000
